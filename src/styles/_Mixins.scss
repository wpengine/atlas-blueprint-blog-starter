@import "Themes";
/**
 * themify - Change color of a css property based on the currently active theme
 *
 * @param  {key}     CSS property
 * @param  {color}   Color name defined in the themes under _color-palette.scss
 *
 * @example - @include theme-aware('background', 'color-background');
 * @returns - background: #FFF;
 */
@mixin themify($isModule: false, $themes: $themes) {
  @each $theme, $map in $themes {

    $selector: '.theme-#{"" + $theme}';

    @if $isModule {
      $selector: ':global(#{"" + $selector})';
    }

    #{"" + $selector} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }

      @content;
      $theme-map: null !global;
    }

  }
}

@function themed( $key ) {
  @return map-get( $theme-map, $key );
}